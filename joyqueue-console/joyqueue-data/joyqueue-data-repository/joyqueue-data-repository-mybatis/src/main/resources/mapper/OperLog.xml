<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.joyqueue.repository.OperLogRepository">
    <resultMap id="BaseResultMap" type="OperLog">
        <id column="id" property="id" />
        <result column="type" property="type" />
        <result column="identity" property="identity" />
        <result column="oper_type" property="operType" />
        <result column="target" property="target" />
        <result column="create_time" property="createTime" />
        <result column="create_by" property="createBy.id" />
        <result column="user_code" property="createBy.code" />
        <result column="user_name" property="createBy.name" />
        <result column="update_time" property="updateTime" />
        <result column="update_by" property="updateBy.id" />
        <result column="status" property="status" />
    </resultMap>

    <sql id="baseColumnList">
        id, `type`, `identity`, oper_type, target, create_time, create_by, update_time, update_by, status
    </sql>

    <insert id="add" parameterType="OperLog" useGeneratedKeys="true" keyProperty="id">
        insert into oper_log
        (`type`, `identity`, oper_type, target, create_time, create_by, update_time, update_by, status)
        values (
                 #{type},
                 #{identity},
                 #{operType},
                 #{target},
                <choose>
                    <when test="null != createTime">
                        #{createTime},
                    </when>
                    <otherwise>
                        now(),
                    </otherwise>
                </choose>
                 #{createBy.id},
                <choose>
                    <when test="null != updateTime">
                        #{updateTime},
                    </when>
                    <otherwise>
                        now(),
                    </otherwise>
                </choose>
                 #{updateBy.id},
                 #{status})
    </insert>

    
    <sql id="baseCondition">
      <if test="query.createTime != null">
          and date_format(o.create_time, '%Y-%m-%d') = date_format(#{query.createTime}, '%Y-%m-%d')
      </if>
        <if test="query.beginTime != null">AND o.create_time <![CDATA[>=]]>#{query.beginTime} </if>
        <if test="query.endTime != null">AND o.create_time <![CDATA[<=]]> #{query.endTime} </if>
      <if test="query.type != null and query.type > 0"  >
          and o.type = #{query.type}
      </if>
        <if test="query.identity != null and query.identity != ''"  >
            and o.identity = #{query.identity}
        </if>
        <if test="query.erp != null and query.erp != ''"  >
            and u.code = #{query.erp}
        </if>
      <if test="query.keyword != null">
          and (u.code like concat('%',#{query.keyword},'%') or u.name like concat('%',#{query.keyword},'%'))
      </if>
          and o.status > -1
    </sql>
    
    <select id="findByQuery" parameterType="QPageQuery" resultMap="BaseResultMap">
        select o.id, o.type, o.identity, o.oper_type, o.target, o.create_time, o.create_by, o.update_time, o.update_by, o.status,u.name as user_name,u.code as user_code
          from oper_log o, user u
         where o.create_by = u.id
        <include refid="baseCondition"/>
        order by o.id desc
    </select>

    <select id="findCountByQuery" parameterType="QPageQuery" resultType="int">
        select count(1)
          from oper_log o, user u
         where o.create_by = u.id
        <include refid="baseCondition"/>
    </select>
</mapper>